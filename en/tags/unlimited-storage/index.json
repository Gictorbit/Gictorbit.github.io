[{"content":"Store files in Google Docs without counting against your quota.\nFeatures  Upload files to Google Drive without using storage space Download any stored files to your computer  Logic  Google Docs take up 0 bytes of quota in your Google Drive Split up binary files into Google Docs, with base64 encoded text Size of the encoded file is always larger than the original. Base64 encodes binary data to a ratio of about 4:3. A single google doc can store about a million characters. This is around 710KB of base64 encoded data. Some experiments with multi-threading the uploads, but there was no significant performance increase.  Setup \u0026amp; Authentication  Clone the Repository and setup the requirements pip3 install -r requirements.txt Head to Google\u0026rsquo;s API page and enable the Drive API Download the configuration file as \u0026lsquo;client_secret.json\u0026rsquo; to the UDS directory Run python3 uds.py or ./uds.py for initial set up  UDS Core Upload 1 2 3 4  \u0026gt; ./uds.py --push Ubuntu.Desktop.16.04.iso Ubuntu.Desktop.16.04.iso will required 543 Docs to store. Created parent folder with ID 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8 Successfully Uploaded Ubuntu.Desktop.16.04.iso: [██████████████████████████████] 100%   [Layout] ./uds.py --push argument argument: Path_to_file+file_name List 1 2 3 4 5 6 7 8 9 10 11 12  \u0026gt; ./uds.py --list Name Size Encoded ID ------------------------ ----- --------- --------------------------------- Ubuntu.Desktop.16.04.iso 810 MB 1.1 GB 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8 Ubuntu.Desktop.18.10.iso 1.1 GB 1.3 GB 1RzzVfN9goHMTkM1Hf1FUWUVS_2R3GK7D Also supports searching with a query! \u0026gt; ./uds.py --list \u0026#34;18\u0026#34; Name Size Encoded ID ------------------------ ----- --------- --------------------------------- Ubuntu.Desktop.18.10.iso 1.1 GB 1.3 GB 1RzzVfN9goHMTkM1Hf1FUWUVS_2R3GK7D   [Layout] ./uds.py --list arguments: query Download 1 2  \u0026gt; ./uds.py --pull 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8 Downloaded Ubuntu.Desktop.16.04.iso: [██████████████████████████████] 100%   [Layout] ./uds.py --pull argument argument: id_of_file Delete 1 2  \u0026gt; ./uds.py --delete 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8 Deleted 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8   [Layout] ./uds.py --delete argument argument: id_of_file Alpha Extensions Grab 1 2 3  \u0026gt; ./uds.py --grab test.7z Update Successful! Downloaded test.7z: [██████████████████████████████] 100%   [Layout] ./uds.py --grab argument argument: name_of_file Erase 1 2 3  \u0026gt;./uds.py --erase test2.7z Update Successful! Deleted test2.7z   [Layout] ./uds.py --erase argument argument: name_of_file Update 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026gt; ./uds.py --update Name Encoded Size --------- -------- ----- file_name 1.1 GB 810 MB \u0026#34;User.txt\u0026#34; Name Encoded Size --------- -------- ----- file_name 1.1 GB 810 MB \u0026#34;data.txt\u0026#34; { \u0026#34;file0\u0026#34;: \u0026#34;1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms8\u0026#34; \u0026#34;file2\u0026#34;: \u0026#34;1fc6JGpX6vUWiwflL1jBxM1YpuMHFAms9\u0026#34; }   [Layout] ./uds.py --update arguments: None Bulk Extensions Bunch 1 2 3 4 5 6 7 8 9 10  \u0026gt; ./uds.py --bunch test test.7z.1 will require 1337 Docs to store. Created parent folder with ID 1fc6JGpX6vUWiwflL1jBxM1YpuMHFAm12 Successfully Uploaded test.7z.1: [██████████████████████████████] 100% test.7z.2 will require 1337 Docs to store. Created parent folder with ID 1fc6JGpX6vUWiwflL1jBxM1YpuQQFAm12 Successfully Uploaded test.7z.2: [██████████████████████████████] 100% test.7z.3 will require 600 Docs to store. Created parent folder with ID 1fc6JGpX6vTOiwflL1jBxM1YpuQQFAm12 Successfully Uploaded test.7z.3: [██████████████████████████████] 100%   [Layout] ./uds.py --bunch argument[1] argument[2] argument[1]: name_in_files, or wildcard \u0026quot;?\u0026quot; without quotes argument[2]: directory, default is current directory of UDS Batch 1 2 3 4 5  \u0026gt; ./uds.py --batch file_name Update Successful! Downloaded file_name.7z.1: [██████████████████████████████] 100% Downloaded file_name.7z.2: [██████████████████████████████] 100% Downloaded file_name.7z.3: [██████████████████████████████] 100%   [Layout] ./uds.py --batch argument arguments: name_in_files, or wildcard \u0026quot;?\u0026quot; without quotes Wipe 1 2 3 4 5  \u0026gt; ./uds.py --wipe file Update Successful! Deleted file.7z.1 Deleted file.7z.2 Deleted file.7z.3   [Layout] ./uds.py --wipe argument arguments: name_in_files, or wildcard \u0026quot;?\u0026quot; without quotes Only Compatible with Python 3.\nsource in github: UDS : Unlimited Drive Storage   ","description":"bypass google drive storage limit","id":0,"section":"posts","tags":["google drive","python","unlimited storage"],"title":"Unlimited Drive Storage","uri":"http://gictor.ir/en/posts/etc/unlimited-google-drive/"}]